#!/usr/bin/env sage

import params


def long_to_bytes(n):
    b = hex(n)[2:-1]
    b = '0' * (len(b)%2) + b
    return b.decode('hex')


def bytes_to_long(b):
    b = b.encode('hex')
    return int(b, 16)


def polgcd(a, b): 
    while b:
        print(b.degree())
        a, b = b, a % b
    return a.monic()


def main():
    PLEASE_INPUT_CT = 1526394083446208239841498973392970835243668249822622667787939256265813427354525814964783000782631307720429947475236056716523115855489009903566531769114551107199707477074013084951770667474450652142856735061531351035999823051129304842867047820333350006375794536542561655061357873318569134410828742529961157771129710982109321104286521522387046911010197292008037692339676866112801253412809137790703568669871896885241002423768820366350066471833131777758252404358313199049025892622134480920170034943342337163800050690036678204970657587744361682252925460370515431829000592333661203851616259724708073767247229672706692278188L
    FLAG_CT = 1261541183365813869151180644522422600720489575199621015454635944475082820132429547934928123390872331898251567616854326850845560401452233419155951326999234674850959019059163717987871818587202781843319571975125086512126139320205819007171384369741683192602378777003954152496723953322343039269127270962641538970414466178391482163145189910422082948356458469557917919788194812395776411391798972537878278910992781783627182424837495443353239711943369428291090230686772976030815737846211168323062835833457860827205799008533855808282649064840336957328982841147689649325500295156756982912490863628110249255629167733145626443294L
    CHECKING_CT = 1303560872716340262034695005648271974997579187166653085865694111484794703456544294259018608272598385634844621487220780048415169326095346162740624094494196020951141481888811588945288229918250821827230861545709445294828602826509929586272427158053904861952029442991157122040066013678493028180552229582872279045545389112375505793111162820185718358129928377315129500396960708889693751583857340153019587754091127528537450053456335605392906753007107374495436113659137817462355707499949100474165578239826304692268378268800001411422395557789506408142014512297678856364682582823660995948396533809230905876989288695468817545123L
    CORRECT_CT = 78049122720582428801256393272330894297484044805725394575312458071640633554557665133559963420668374617223748708874310314184092129192086807507435630662035077653803602439442130098008899408868544849529491695065950179524456214970868208499434797016053508994123656690965279966861351928030179855311670035571550205260988112709633021320658743250148073351858064306644983625630325324918927886586722124220779161456196269213668554143871938035276918612180604379349535301074781938831604945762769219156813611963952493838009686866651177236910913809823230051915330732161513977451374185333651320581227157724671183458629737328767619324L
    BYE_CT = 437210844791609593662034044698933095516302170823066855334534446785594916121241157597255031109941236802534635582329375187188181368165925126810124866641146448548793559962181336860026929438002602498628937355272992043593730361448341052286078231535428279676097493086559662400326815559000913158064546421501805141541255796375347334340121644959157395155420491156364426863386678846165928384806938655529634387967781410318564269656519316765703987632428849979289793058704637762727021286841985867031667569058992127346148818651130177185214553769137264540515425080151866173061533146050500791417505816081467074009967478067333479590L

    PLEASE_INPUT_PT = bytes_to_long('[*] Please, input your flag:')
    CORRECT_PT = bytes_to_long('[+] Correct :)')
    BYE_PT = bytes_to_long('[*] Bye!')

    FLAG_LENGTH = 41

    E = params.RSA.e
    N = gcd(PLEASE_INPUT_PT ** E - PLEASE_INPUT_CT, BYE_PT ** E - BYE_CT)
    N = gcd(CORRECT_PT ** E - CORRECT_CT, N)
    print(N)

    BEFORE_FLAG, AFTER_FLAG = '[*] Checking ', ' ...'
    CHECKING_PT_DIFF = bytes_to_long(BEFORE_FLAG + '\x00'*FLAG_LENGTH + AFTER_FLAG)
    MUL = 1 << (len(AFTER_FLAG) * 8)

    P.<X> = PolynomialRing(Zmod(N))
    P1 = (MUL*X + CHECKING_PT_DIFF)^E - CHECKING_CT
    P2 = X^E - FLAG_CT

    COEFFS = (-polgcd(P1, P2)).coefficients()
    FLAG = long_to_bytes(int(COEFFS[0]))
    print(FLAG)


if __name__ == '__main__':
    main()
